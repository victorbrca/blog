<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Victor&#39;s Blog</title>
    <link>https://blog.victormendonca.com/tags/vim/</link>
    <description>Recent content in Vim on Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) 2018 Copyright Victor Mendon√ßa</copyright>
    <lastBuildDate>Mon, 31 Dec 2018 13:44:17 -0500</lastBuildDate>
    
	<atom:link href="https://blog.victormendonca.com/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Install and Configure Vim Plug</title>
      <link>https://blog.victormendonca.com/2018/12/31/how-to-install-and-configure-vim-plug/</link>
      <pubDate>Mon, 31 Dec 2018 13:44:17 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/12/31/how-to-install-and-configure-vim-plug/</guid>
      <description>Quick step by step instructions to get you started with the Vim plugin manager vim-plug.
a- Install the vim-plug package (Arch) from the AUR repo
aur/vim-plug 0.10.0-1 [installed] (19) (0.05) A vim plugin manager  b. Configure your ~/.vimrc with a section for the new plugins. This is where you will define all the plugins that you want to use. I would also add this section at the top of your file.</description>
    </item>
    
    <item>
      <title>Editing Multiple Lines in Vim</title>
      <link>https://blog.victormendonca.com/2018/09/19/uncomment-multiple-lines-in-vim/</link>
      <pubDate>Wed, 19 Sep 2018 10:41:47 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/09/19/uncomment-multiple-lines-in-vim/</guid>
      <description>A simple way of to edit (like commenting or uncommenting) a block of lines/code in Vim.
The example below explains how to comment multiple lines:
 Place the cursor on the first line that you&amp;rsquo;d like to edit Press Ctrl+v User the arrow keys to go down until the last line Press Shift+i to go into insert mode Press # Press Esc and wait a second  </description>
    </item>
    
    <item>
      <title>Additional Status for Vim With Powerline</title>
      <link>https://blog.victormendonca.com/2017/09/20/additional-status-for-vim-with-powerline/</link>
      <pubDate>Wed, 20 Sep 2017 13:26:46 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/20/additional-status-for-vim-with-powerline/</guid>
      <description>Would you like to have more information displayed while reading files in VIM? Powerline is a great utility for that.
In it&amp;rsquo;s default config, it displays:
 Current mode (normal, insert, visual) Git branch File name File encoding Script type File view percentage Line number  To install it Arch: sudo pacman -Ss python-powerline powerline  Add the line below to your ~/.vimrc
set laststatus=2  Note: If you get the error below</description>
    </item>
    
  </channel>
</rss>