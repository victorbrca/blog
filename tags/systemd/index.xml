<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Systemd on Victor&#39;s Blog</title>
    <link>https://blog.victormendonca.com/tags/systemd/</link>
    <description>Recent content in Systemd on Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) 2016 Copyright my blog</copyright>
    <lastBuildDate>Mon, 14 May 2018 12:53:43 -0400</lastBuildDate>
    
	<atom:link href="https://blog.victormendonca.com/tags/systemd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a Simple Systemd User Service</title>
      <link>https://blog.victormendonca.com/2018/05/14/creating-a-simple-systemd-user-service/</link>
      <pubDate>Mon, 14 May 2018 12:53:43 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/05/14/creating-a-simple-systemd-user-service/</guid>
      <description>Quick instructions on how to create a simple systemd user service for a program or script.
1- Identify the script or program/binary that you will be using
2- Create a systemd unit file using the example below, give it a name that will make sense to you with a .service extension (like [my_service].service), and save it to $USER/.config/systemd/user
[Unit] Description=[Service description] [Service] Type=simple StandardOutput=journal ExecStart=[script path] [Install] WantedBy=default.target  For this example we used a service type simple, which allows systemd to take care of the most basic needs for us.</description>
    </item>
    
  </channel>
</rss>