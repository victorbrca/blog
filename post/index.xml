<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Victor&#39;s Blog</title>
    <link>https://blog.victormendonca.com/post/</link>
    <description>Recent content in Posts on Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) 2018 Copyright Victor Mendonça</copyright>
    <lastBuildDate>Wed, 28 Oct 2020 16:16:10 -0400</lastBuildDate>
    
	<atom:link href="https://blog.victormendonca.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Setup a USB UPS on pfSense</title>
      <link>https://blog.victormendonca.com/2020/10/28/how-to-setup-ups-on-pfsense/</link>
      <pubDate>Wed, 28 Oct 2020 16:16:10 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/28/how-to-setup-ups-on-pfsense/</guid>
      <description>So you need to configure pfSense with an UPS!? Well, good thing this post is called &amp;laquo;How to Setup UPS on pfSense&amp;raquo;.
a. Start by plugging the USB cable to your pfSense and your UPS
b. Now log in to the pfSense UI and go into &amp;laquo;System =&amp;gt; Package Manager&amp;raquo;
b. Search for &amp;lsquo;nut&amp;rsquo; and click on &amp;lsquo;Install&amp;rsquo;
c. Go to &amp;laquo;Services =&amp;gt; UPS =&amp;gt; UPS Settings&amp;raquo;, select &amp;laquo;Local USB&amp;raquo;, give the UPS a name and click on &amp;laquo;Save&amp;raquo;</description>
    </item>
    
    <item>
      <title>How to Install Telegraf on FreeNAS</title>
      <link>https://blog.victormendonca.com/2020/10/28/how-to-install-telegraf-on-freenas/</link>
      <pubDate>Wed, 28 Oct 2020 11:49:16 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/28/how-to-install-telegraf-on-freenas/</guid>
      <description>Quick and simple instructions on how to install Telegraf collector agent on FreeNAS.
a. Start by creating a folder for Telegraf on one of your pools. I have mine under /mnt/Volume1/home/system/telegraf
b. Download the Telegraf tar for FreeBSD (here), extract it and copy the binary and the .conf files to the folder we created in the previous step
 ./telegraf-[version]/usr/bin/telegraf ./telegraf-[version]/etc/telegraf/telegraf.conf  c. Create telegraf.init in the same folder (make sure to modify the 2 lines with your path)</description>
    </item>
    
    <item>
      <title>How to Configure a UPS Between Linux and FreeNAS</title>
      <link>https://blog.victormendonca.com/2020/10/22/how-to-configure-a-ups-between-linux-and-freenas/</link>
      <pubDate>Thu, 22 Oct 2020 11:00:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/22/how-to-configure-a-ups-between-linux-and-freenas/</guid>
      <description>After having bad memory modules due to power outages at home (on both my FreeNAS and my desktop) I knew I had to invest on a UPS. I will cover the details of the configuration, and as usual, I will try to go straight to the point.
Keep in mind that I&amp;rsquo;m running Arch on my desktop and FreeNAS-11.3-U1, and that the UPS is connected to my desktop (master) via USB.</description>
    </item>
    
    <item>
      <title>How to Quickly Create an Encrypted USB Drive on KDE Plasma</title>
      <link>https://blog.victormendonca.com/2020/10/21/how-to-create-an-encrypted-usb-drive-on-kde-plasma/</link>
      <pubDate>Wed, 21 Oct 2020 15:32:17 +0000</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/21/how-to-create-an-encrypted-usb-drive-on-kde-plasma/</guid>
      <description>Need to create an encrypted USB drive? Are your running KDE Plasma?
Then great! Here are 6 simple steps on how to quickly and painlessly create an encrypted USB drive with KDE Partition Manager.
Let&amp;rsquo;s start a. Start by inserting your USB drive
b. Now launch KDE Parition Manager and type your password
c. Select the USB drive and right click to delete the existing partition
 ⚠️ WARNING: remember, this will delete all your existing files)</description>
    </item>
    
    <item>
      <title>How to Install Waveshare 3.5&#34; LCD on Ubuntu 20.04</title>
      <link>https://blog.victormendonca.com/2020/10/13/how-to-install-waveshare-3.5inch-lcd-on-ubuntu-20.04/</link>
      <pubDate>Tue, 13 Oct 2020 14:45:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/13/how-to-install-waveshare-3.5inch-lcd-on-ubuntu-20.04/</guid>
      <description>Following the steps of an older post (Installing Kuman 3), I find myself trying to configure the same Waveshare 3.5&amp;raquo; LCD touch screen on my Raspberry Pi 3B, but now with Ubuntu 20.04 64.bit.
As usual the LCDs from Waveshare are not that easy to configure. While researching online I could not find any working instructions on how to configure the screen with Ubuntu 20.04. I found a few Git repos (Wavesahre and LCD Wiki), but they all failed to get me with a working config.</description>
    </item>
    
    <item>
      <title>How to Show Progress for dd</title>
      <link>https://blog.victormendonca.com/2020/10/09/how-to-show-progress-for-dd/</link>
      <pubDate>Fri, 09 Oct 2020 11:28:28 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/10/09/how-to-show-progress-for-dd/</guid>
      <description>If you have reached this page I expect that you already know what dd is. But you if you don&amp;rsquo;t, dd is a command-line utility that is used to convert and copy files. It&amp;rsquo;s commonly found on various (Linux) distro help pages that show new users how to setup USB (or Micro SD) drives to install or run (like Raspberry Pi) the OS.
One of the main problems is that when running the dd utility, it does not provide any information on the current status of the copy process.</description>
    </item>
    
    <item>
      <title>Quick Guide to SUID, SGID and Sticky Bit</title>
      <link>https://blog.victormendonca.com/2020/09/11/quick-guide-to-suig-sgid-and-sticky-bit/</link>
      <pubDate>Fri, 11 Sep 2020 16:00:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/09/11/quick-guide-to-suig-sgid-and-sticky-bit/</guid>
      <description>This is a quick guide on how to configure and use SGID, SUID and the sticky bit on Linux. I will not get into a lot of details, but I will add comments and notes that might help you understand or overcome a few common issues.
SUID - Set-user Identification When a command or script with SUID bit set is run, its effective UID becomes that of the owner of the file, rather than of the user who is running it.</description>
    </item>
    
    <item>
      <title>TLP and CPUFreq on ThinkPad P1 Gen 2 (KDE Arch)</title>
      <link>https://blog.victormendonca.com/2020/06/17/lenovo-p1-gen-tlp-on-arch/</link>
      <pubDate>Wed, 17 Jun 2020 20:00:36 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/06/17/lenovo-p1-gen-tlp-on-arch/</guid>
      <description>On this tutorial I will show you how to install and configure TLP and Intel P-state and CPUFreq Manager on your ThinkPad P1 Gen 2 (with KDE Arch).
If you don&amp;rsquo;t know, TLP allows you to configure specific rules to help optimize the battery life on your laptop, while Intel P-state and CPUFreq Manager gives you a pretty interface via a tray icon that allows you to control CPU/GPU frequencies and a few power profiles.</description>
    </item>
    
    <item>
      <title>AWS Routing Policies - Visual Comparison</title>
      <link>https://blog.victormendonca.com/2020/04/28/aws-routing-policies---visual-comparison/</link>
      <pubDate>Tue, 28 Apr 2020 14:45:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/04/28/aws-routing-policies---visual-comparison/</guid>
      <description>A quick explanation and visual overview of the AWS Route 53 policies (with the exception of Geoproximity Routing).
Simple Routing Policy Use for a single resource that performs a given function for your domain, for example, a web server that serves content for the example.com website.
Important points to remember:
 Simplest routing policy Only one DNS record set Multiple IP address per record set can be used Values are returned to user in random order No health checks  Weighted Routing Policy Weighted Routing Policy controls the percentage of the requests that go to a specific endpoint.</description>
    </item>
    
    <item>
      <title>How to Change macOS Key Bindings</title>
      <link>https://blog.victormendonca.com/2020/04/27/how-to-change-macos-key-bindings/</link>
      <pubDate>Mon, 27 Apr 2020 13:45:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/04/27/how-to-change-macos-key-bindings/</guid>
      <description>This post will show you how to change line movement and control key bindings in macOS to be similar to what we use in Linux (and windows).
The following keyboard shortcuts will be added:
   Sequence Command     Ctrl+Left Back one word   Ctrl+Right Forward one word   Ctrl+Shift+Left Back one word and modify selection   Ctrl+Shift+Right Forward one word and modify selection   Home Beginning of the line   End End of line   Shift+Home Beginning of the line and modify selection   Shift+End End of line and modify selection   Ctrl+Home Top of page   Ctrl+End End of page   Shift+Ctrl+Home Top of page and modify selection   Shift+Ctrl+End End of page and modify selection    Instructions a.</description>
    </item>
    
    <item>
      <title>How to Share WiFi Credentials from Terminal</title>
      <link>https://blog.victormendonca.com/2020/04/23/how-to-share-wifi-via-terminal-generated-qr-code/</link>
      <pubDate>Thu, 23 Apr 2020 20:24:12 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/04/23/how-to-share-wifi-via-terminal-generated-qr-code/</guid>
      <description>Now here&amp;rsquo;s a cool and quick way to share your WiFi SSID and password from a terminal window with a guest.
You can use qrencode to generate a QR code with the parameters below:
WIFI:S:[Your SSID here];T:WPA;P:[Your Password Here];;  For example, let&amp;rsquo;s pretend my SSID is MySweetSSID and my password is mysecretpassword. We can run:
qrencode -o - -t utf8 &#39;WIFI:S:MySweetSSID;T:WPA;P:mysecretpassword;;&#39;  To get:</description>
    </item>
    
    <item>
      <title>How to Install macOS Catalina in Virtual Box</title>
      <link>https://blog.victormendonca.com/2020/04/17/how-to-install-macos-catalina-in-virtual-box/</link>
      <pubDate>Fri, 17 Apr 2020 22:00:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/04/17/how-to-install-macos-catalina-in-virtual-box/</guid>
      <description>This document will provide instructions on getting a macOS Catalina install working with Guest Additions on VirtaulBox 6.1.
Start by downloading a copy of the installer from the App Store. You will need a computer running macOS and you will need to convert the installer to an ISO. I will not be covering these steps here, but there are plenty tutorials online.
Installing VirtualBox I&amp;rsquo;m hoping you already have this part covered and you are coming here only because you had issues getting macOS installed, but just in case, make sure the following packages are installed (Arch):</description>
    </item>
    
    <item>
      <title>How to Install chrome-remote-desktop on Arch</title>
      <link>https://blog.victormendonca.com/2020/04/02/how-to-install-chrome-remote-desktop-on-arch/</link>
      <pubDate>Thu, 02 Apr 2020 19:03:03 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/04/02/how-to-install-chrome-remote-desktop-on-arch/</guid>
      <description>Chrome Remote Desktop has been around for quite a while, but now Google offers a .deb installer with native Linux support via Systemd. This is great because it removes the need to setup VPNs and VNC to remote connect to your machines, or in the case that you need to land a hand to a not so technical savvy family member or friend.
Unfortunately the installer is only for Ubuntu (and Debian based distros), but with a few steps we can get it running on Arch, and (thanks to a patch by nightuser) even configure it to use existing X sessions instead of creating a new one (which is the default behavior).</description>
    </item>
    
    <item>
      <title>How to Move Plex Installation on FreeNAS 11.3</title>
      <link>https://blog.victormendonca.com/2020/03/30/how-to-move-plex-installation-on-freenas/</link>
      <pubDate>Mon, 30 Mar 2020 13:56:51 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/03/30/how-to-move-plex-installation-on-freenas/</guid>
      <description>I had some free time this weekend and decided to upgrade my FreeNAS. I went from 11.1 to 11.3-UI and the upgrade installed without any issues. However, after the reboot I discovered that my jails and plugins were missing from the UI and that they were not running. I had read the manual (FreeNAS® 11.3-U1 User Guide) before the upgrade and and the instructions did not mention anything about the plugins, so I was little worried.</description>
    </item>
    
    <item>
      <title>RHCSA v8: Work with Package Module Streams</title>
      <link>https://blog.victormendonca.com/2020/03/15/rhcsa-v8-work-with-package-module-streams/</link>
      <pubDate>Sun, 15 Mar 2020 20:52:36 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/03/15/rhcsa-v8-work-with-package-module-streams/</guid>
      <description>Disclaimer These are my study notes for the RHCSA exam on YUM modules. There&amp;rsquo;s most likely more information than what&amp;rsquo;s needed for the exam, and I cannot guarantee that all information is correct.
Definition RHEL 8 content is distributed through two main repositories: BaseOS and AppStream.
BaseOS Content in the BaseOS repository is intended to provide the core set of the underlying OS functionality that provides the foundation for all installations.</description>
    </item>
    
    <item>
      <title>RHCSA V8: Configure Disk Compression</title>
      <link>https://blog.victormendonca.com/2020/03/14/rhsa-v8-configure-disk-compression/</link>
      <pubDate>Sat, 14 Mar 2020 14:56:39 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/03/14/rhsa-v8-configure-disk-compression/</guid>
      <description>Disclaimer These are my study notes for the RHCSA exam on disk compression. There&amp;rsquo;s most likely more information than what&amp;rsquo;s needed for the exam, and I cannot guarantee that all information is correct.
Definition Virtual Data Optimizer (VDO) provides inline data reduction for Linux in the form of deduplication, compression, and thin provisioning. When you set up a VDO volume, you specify a block device on which to construct your VDO volume and the amount of logical storage you plan to present.</description>
    </item>
    
    <item>
      <title>RHCSA v8 - What&#39;s New</title>
      <link>https://blog.victormendonca.com/2020/03/14/rhcsa---whats-new/</link>
      <pubDate>Sat, 14 Mar 2020 11:31:56 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2020/03/14/rhcsa---whats-new/</guid>
      <description>The updated RHCSA exam for RHEL 8 has been out since last year, however, the old exam is still available, and will stay available until August 1st, 2020:
You may be trying to figure out what version will be best for you, and I&amp;rsquo;m hoping the information here will help you.
Something to take in consideration is that the exam is valid for 3 years, or 2 releases (meaning that once RHEL 9 is out, your RHSCA on RHEL 7 is no longer valid).</description>
    </item>
    
    <item>
      <title>Bash Arrays and Iterations</title>
      <link>https://blog.victormendonca.com/2019/12/16/bash-arrays-and-iterations/</link>
      <pubDate>Mon, 16 Dec 2019 09:57:18 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/12/16/bash-arrays-and-iterations/</guid>
      <description>Bash arrays can be great for iterating over a list of items. I&amp;rsquo;m giving a quick example below on a list of services. All you need is to list all values in different arrays and use an index to map them back together.
Example:
   # Service Path Config File     1 CUPS /etc/cups cupsd.conf   2 MPD /etc mpd.conf   3 SSHD /etc/ssh sshd.</description>
    </item>
    
    <item>
      <title>Touchpad Gestures on XPS 13</title>
      <link>https://blog.victormendonca.com/2019/04/15/touchpad-gestures-on-xps-13/</link>
      <pubDate>Mon, 15 Apr 2019 18:14:35 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/04/15/touchpad-gestures-on-xps-13/</guid>
      <description>The XPS 13 is a great laptop and it comes with an equally matched touchpad. Setting up touch gestures is pretty easy, and we will cover what needs to be done to get it working on Arch.
First, let&amp;rsquo;s install all the needed software:
 extra/libinput aur/libinput-gestures  After installing the 2 packages you should be able to run libinput-gestures -d as root and try the pre-defined gestures. You should see an output when you swipe left/right/up/down with &amp;frac34; fingers and pinch in/out.</description>
    </item>
    
    <item>
      <title>Bash Tips: History</title>
      <link>https://blog.victormendonca.com/2019/03/11/bash-tips-history/</link>
      <pubDate>Mon, 11 Mar 2019 18:30:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/03/11/bash-tips-history/</guid>
      <description>Bash keeps a history of the commands you type in and saves them to ~/.bash_history. These commands can be accessed in many ways and there are a lot of configuration related on how they are saved. I&amp;rsquo;ll cover some basic functionality here.
Event Designators (!, !!, !*) From MAN Pages
 An event designator is a reference to a command line entry in the history list. Unless the reference is absolute, events are relative to the current position in the history list.</description>
    </item>
    
    <item>
      <title>Colorful Banners With figlet and lolcat</title>
      <link>https://blog.victormendonca.com/2019/03/10/colorful-banners-with-figlet-and-lolcat/</link>
      <pubDate>Sun, 10 Mar 2019 15:17:22 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/03/10/colorful-banners-with-figlet-and-lolcat/</guid>
      <description>Banners in *nix like systems is something that is being used for a very long time. System admins would sometimes use it to let users know that the system was going down (nowadays built-in with the shutdown command), or setup motd messages for SSH logins. Within the past years people got very creative with the use of different fonts and ASCII art.
For today&amp;rsquo;s post we will work With two different apps to display beautiful banners on your systems or config/dot files:</description>
    </item>
    
    <item>
      <title>Fzf for the Win</title>
      <link>https://blog.victormendonca.com/2019/02/27/fzf-for-the-win/</link>
      <pubDate>Wed, 27 Feb 2019 08:00:39 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/02/27/fzf-for-the-win/</guid>
      <description>fzf is a command line fuzzy finder that can be used to automatically filter a list of items. Think of it as an interactive search tool, where items get filtered as you type characters in your terminal.
The video below shows a basic interaction using a list or files from the fd search utility:
fzf can also be used with other Bash tasks, like history, ssh and even file/dir completion. The GitHub page has a lot documentation on how to implement auto completion.</description>
    </item>
    
    <item>
      <title>Bash Theme Powerline 2column</title>
      <link>https://blog.victormendonca.com/2019/02/11/bash-theme-powerline-2column/</link>
      <pubDate>Mon, 11 Feb 2019 13:53:01 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/02/11/bash-theme-powerline-2column/</guid>
      <description>powerline-2column is a simple powerline like prompt for Bash that displays information in two columns.
The prompt provides the following information:
Left Side
 Folder icon for:  Git folder with provider icon Home folder Dropbox folder  Username Hostname (when connecting via SSH) Current path Git status  untracked uncommited ahead/behind   Right Side
 Previous exit code Battery status sudo cached credentials Time  Check out some of the things it can do on the video below.</description>
    </item>
    
    <item>
      <title>Count Lines of Codes With Cloc</title>
      <link>https://blog.victormendonca.com/2019/01/15/count-lines-of-codes-with-cloc/</link>
      <pubDate>Tue, 15 Jan 2019 10:52:48 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/01/15/count-lines-of-codes-with-cloc/</guid>
      <description>Have you ever had the nead to count the lines of code in a project or a folder? If you did, or want to, cloc is a neat utility that can help with just that.
As per it&amp;rsquo;s description on the GitHub page, &amp;laquo;cloc counts blank lines, comment lines, and physical lines of source code in many programming languages&amp;raquo;. It displays a summary of file types and counted files, and then it breaks down a list of lines of code per language.</description>
    </item>
    
    <item>
      <title>How to Migrate Unifi Controller</title>
      <link>https://blog.victormendonca.com/2019/01/14/how-to-migrate-unifi-controller/</link>
      <pubDate>Mon, 14 Jan 2019 12:57:11 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2019/01/14/how-to-migrate-unifi-controller/</guid>
      <description>Quick instructions on how to migrate a Unifi controller on Linux. Note that it requires SSH access to the AP and a bit of downtime.
a. Logon to your old Unifi controller, go to Settings=&amp;gt;Auto Backup and download a backup
Note: Force a new backup if you have new changes
b. Browse to your AP, write down the IP address
c. Select the AP, go to Config=&amp;gt;Manage Device=&amp;gt;Forget this device and click on Forget (click ok on the alert)</description>
    </item>
    
    <item>
      <title>How to Install and Configure Vim Plug</title>
      <link>https://blog.victormendonca.com/2018/12/31/how-to-install-and-configure-vim-plug/</link>
      <pubDate>Mon, 31 Dec 2018 13:44:17 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/12/31/how-to-install-and-configure-vim-plug/</guid>
      <description>Quick step by step instructions to get you started with the Vim plugin manager vim-plug.
a- Install the vim-plug package (Arch) from the AUR repo
aur/vim-plug 0.10.0-1 [installed] (19) (0.05) A vim plugin manager  b. Configure your ~/.vimrc with a section for the new plugins. This is where you will define all the plugins that you want to use. I would also add this section at the top of your file.</description>
    </item>
    
    <item>
      <title>Using Latte as a Dock in Kde</title>
      <link>https://blog.victormendonca.com/2018/10/18/using-latte-as-a-dock-in-kde/</link>
      <pubDate>Thu, 18 Oct 2018 12:10:00 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/10/18/using-latte-as-a-dock-in-kde/</guid>
      <description>Latte is a great &amp;laquo;newish&amp;raquo; dock for KDE that can be used as launching/task dock, or even completely replace your plasma panels. The dock is fast stable with a good &amp;laquo;feel&amp;raquo;, and it fully supports plasma widgets.
I myself do not like the Apple like task docks. I prefer using docks for app launching and let my panels do the task management. I was looking for a fast dock for my Arch VM at work, and Latte was one of the best options.</description>
    </item>
    
    <item>
      <title>TLDR Instead of MAN</title>
      <link>https://blog.victormendonca.com/2018/10/16/tldr-instead-of-man/</link>
      <pubDate>Tue, 16 Oct 2018 08:49:07 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/10/16/tldr-instead-of-man/</guid>
      <description>Here&amp;rsquo;s a quick way to get quick simplified explanation and usage for commands in Bash with TLDR Pages.
$ tldr tldr # tldr Simplified man pages. - Get typical usages of a command (hint: this is how you got here!): tldr command  TLDR pages is community driven and holds common commands for UNIX, Linux, macOS, SunOS and Windows. The amount of commands available is already pretty vast, and users are encouraged to contribute with new pages on their git repo - https://github.</description>
    </item>
    
    <item>
      <title>Quickly Backing Up Files in Bash</title>
      <link>https://blog.victormendonca.com/2018/10/15/quickly-backing-up-files-in-bash/</link>
      <pubDate>Mon, 15 Oct 2018 14:18:36 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/10/15/quickly-backing-up-files-in-bash/</guid>
      <description>Here&amp;rsquo;s a quick and simple way to backup files in Bash by using Bash&amp;rsquo;s built-in brace expansion {,}.
Let&amp;rsquo;s first create a file:
$ ls -l &amp;gt; listing.txt  Now let&amp;rsquo;s create a backup:
$ cp listing.txt{,.bak}  And the result is a new file with the .bak extension:
$ ls -l listing* Permissions Size User Group Date Modified Name .rw-r--r-- 2.5k victor users 15 Oct 14:21 listing.txt .rw-r--r-- 2.5k victor users 15 Oct 14:21 listing.</description>
    </item>
    
    <item>
      <title>Editing Multiple Lines in Vim</title>
      <link>https://blog.victormendonca.com/2018/09/19/uncomment-multiple-lines-in-vim/</link>
      <pubDate>Wed, 19 Sep 2018 10:41:47 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/09/19/uncomment-multiple-lines-in-vim/</guid>
      <description>A simple way of to edit (like commenting or uncommenting) a block of lines/code in Vim.
The example below explains how to comment multiple lines:
 Place the cursor on the first line that you&amp;rsquo;d like to edit Press Ctrl+v User the arrow keys to go down until the last line Press Shift+i to go into insert mode Press # Press Esc and wait a second  </description>
    </item>
    
    <item>
      <title>Special Characters and Symbols in Bash</title>
      <link>https://blog.victormendonca.com/2018/09/18/special-characters-and-symbols-in-bash/</link>
      <pubDate>Tue, 18 Sep 2018 15:25:08 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/09/18/special-characters-and-symbols-in-bash/</guid>
      <description> Character Recognition Shapecatcher You can use Shapecatcher to draw a character and try to recognize it.
Other usefull sites are &amp;amp;what and Unicode® character table.
In Bash If you can paste the character in Bash, you can dump the character in hex with hexdump
$ echo &amp;quot;✰&amp;quot; | hexdump -C 00000000 e2 9c b0 0a |....| 00000004  Use the hex value to recreate the character:
$ echo -e &amp;quot;\xe2\x9c\xb0&amp;quot; ✰  </description>
    </item>
    
    <item>
      <title>How to Create an Init Like Script</title>
      <link>https://blog.victormendonca.com/2018/09/17/how-to-create-an-init-like-script/</link>
      <pubDate>Mon, 17 Sep 2018 11:40:47 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/09/17/how-to-create-an-init-like-script/</guid>
      <description>On this tutorial I will explain how to create a quick init like script to be run in the background. We will not be adding this script to /etc/init or look into how to run it at startup. Instead we will run it manually. If you are looking for a Systemd version of this tutorial, check out my previous post Creating a Simple Systemd User Service.
First let&amp;rsquo;s create our service script.</description>
    </item>
    
    <item>
      <title>A Simple Powerline Prompt for Bash</title>
      <link>https://blog.victormendonca.com/2018/09/12/a-simple-powerline-prompt-for-bash/</link>
      <pubDate>Wed, 12 Sep 2018 04:10:58 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/09/12/a-simple-powerline-prompt-for-bash/</guid>
      <description>Powerline-simple is a simple powerline prompt for Bash, written by yours truly.
The prompt displays the following information:
 Previous exit code Username Hostname (when connecting via SSH) Battery status sudo cached credentials Current path Git status  You can download it from the GitHub project page.</description>
    </item>
    
    <item>
      <title>KDE Win7 Volume Mixer</title>
      <link>https://blog.victormendonca.com/2018/08/20/kde-win7-volume-mixer/</link>
      <pubDate>Mon, 20 Aug 2018 12:54:35 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/08/20/kde-win7-volume-mixer/</guid>
      <description>It&amp;rsquo;s not often that we see Linux using something inspired by Microsoft, and this is one of those cases. If you are running KDE as your default DE, you should definitely take a look at &amp;laquo;Win7 Volume Mixer&amp;raquo; as an alternative to the default volume mixer. It adds a great visual and a more user friendly interface.
Here&amp;rsquo;s a quick visual comparison:
Default Mixer
Win7 Volume Mixer</description>
    </item>
    
    <item>
      <title>How to Create a Timer in Bash</title>
      <link>https://blog.victormendonca.com/2018/07/19/how-to-create-a-timer-in-bash/</link>
      <pubDate>Thu, 19 Jul 2018 09:45:45 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/07/19/how-to-create-a-timer-in-bash/</guid>
      <description>Following my previous post on &amp;laquo;How to Create a Prompt With Timeout in Bash &amp;raquo;, we will now see how to create a timer (countdown) in Bash using the built-in $SECONDS variable.
The $SECONDS variable holds in the number of seconds the script has been running. So it can easily be used to create a timer inside your script in Bash.
$ bash -c &#39;while true ; do echo -en &amp;quot;\r${SECONDS}s elapsed&amp;quot; ; sleep 1 ; done&#39; 203s elapsed  </description>
    </item>
    
    <item>
      <title>How to Change config.json for Docker Mattermost Preview</title>
      <link>https://blog.victormendonca.com/2018/07/05/how-to-change-config.json-for-docker-mattermost-preview/</link>
      <pubDate>Thu, 05 Jul 2018 15:20:24 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/07/05/how-to-change-config.json-for-docker-mattermost-preview/</guid>
      <description>These instructions show you how to change the config.json file for a Docker Mattermost Preview.
a- As root (or if you enabled non root users to manipulate docker), let&amp;rsquo;s open a shell in the docker container
docker exec -ti mattermost-preview /bin/bash  b. Update the APT db on the docker instance and install vim (needed to edit the file)
apt update apt install vim  c. Change config_docker.json as needed</description>
    </item>
    
    <item>
      <title>How to Change Forgotten Password on WSL (Bash for Windows)</title>
      <link>https://blog.victormendonca.com/2018/07/04/how-to-change-forgotten-password-on-wsl-bash-for-windows/</link>
      <pubDate>Wed, 04 Jul 2018 18:48:26 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/07/04/how-to-change-forgotten-password-on-wsl-bash-for-windows/</guid>
      <description>So you have installed Bash for Windows, but forgot your password!! That&amp;rsquo;s easy to fix, and here&amp;rsquo;s how:
a. Find your username by running Bash for Windows and executing whoami
$ whoami victor_m  b. Change the default user to root by running the code below on a Windows command prompt (cmd.exe)
LxRun.exe /setdefaultuser root  c. Now change the password with bash -c &#39;passwd [user]&#39; (also on the Windows command prompt)</description>
    </item>
    
    <item>
      <title>How to Fix Sddm on Multiple Screens</title>
      <link>https://blog.victormendonca.com/2018/06/29/how-to-fix-sddm-on-multiple-screens/</link>
      <pubDate>Fri, 29 Jun 2018 19:20:45 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/06/29/how-to-fix-sddm-on-multiple-screens/</guid>
      <description>When running multiple screens on KDE with SDDM, your configuration will not be loaded until you actually login to the KDE desktop, so you might end up having screens out of order, or enabled/disabled when they should not be. To fix this is simple, and here&amp;rsquo;s how.
Let&amp;rsquo;s get a list of the devices name, size and position with xrandr:
$ xrandr | grep &#39; connected&#39; DP-1 connected (normal left inverted right x axis y axis) DP-3 connected 1920x1080+1920+0 (normal left inverted right x axis y axis) 480mm x 270mm DP-5 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 598mm x 337mm  As you can see, on my computer I have 3x monitors:</description>
    </item>
    
    <item>
      <title>Installing Kuman 3</title>
      <link>https://blog.victormendonca.com/2018/06/26/installing-kuman-3.5-tft-lcd-on-raspberry-pi-3-model-b/</link>
      <pubDate>Tue, 26 Jun 2018 18:36:26 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/06/26/installing-kuman-3.5-tft-lcd-on-raspberry-pi-3-model-b/</guid>
      <description>Simple instructions (assuming a new Raspbian install) to install Kuman 3.5 TFT LCD on Raspberry Pi 3 Model B.
a. Download Rasbian strech (with desktop) and extract the .img file from the downloaded zip (it&amp;rsquo;s always good to also check the hash of the downloaded file)
b. Insert the SD card and make note of the device being used (make sure you get this right not to overwrite your OS)</description>
    </item>
    
    <item>
      <title>Creating a Simple Systemd User Service</title>
      <link>https://blog.victormendonca.com/2018/05/14/creating-a-simple-systemd-user-service/</link>
      <pubDate>Mon, 14 May 2018 12:53:43 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/05/14/creating-a-simple-systemd-user-service/</guid>
      <description>Quick instructions on how to create a simple systemd user service for a program or script.
1- Identify the script or program/binary that you will be using
2- Create a systemd unit file using the example below, give it a name that will make sense to you with a .service extension (like [my_service].service), and save it to $USER/.config/systemd/user
[Unit] Description=[Service description] [Service] Type=simple StandardOutput=journal ExecStart=[script path] [Install] WantedBy=default.target  For this example we used a service type simple, which allows systemd to take care of the most basic needs for us.</description>
    </item>
    
    <item>
      <title>How to Scan for RTSP Urls</title>
      <link>https://blog.victormendonca.com/2018/02/09/how-to-scan-for-rtsp-urls/</link>
      <pubDate>Fri, 09 Feb 2018 23:04:40 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2018/02/09/how-to-scan-for-rtsp-urls/</guid>
      <description>So you have a camera but can&amp;rsquo;t figure out what the RTSP URL is? Here&amp;rsquo;s the solution.
Head over to nmap.org and download their rtsp-url-brute script to your computer. Then run it with nmap as:
nmap --script rtsp-url-brute -p 554 [IP]  You should see results similar to the ones below:
nmap --script rtsp-url-brute -p 554 192.168.1.15 Starting Nmap 7.60 ( https://nmap.org ) at 2018-02-09 23:00 EST Nmap scan report for 192.</description>
    </item>
    
    <item>
      <title>Custom Stand-up Desk Build</title>
      <link>https://blog.victormendonca.com/2017/12/25/custom-standup-desk-build/</link>
      <pubDate>Mon, 25 Dec 2017 11:09:12 -0500</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/12/25/custom-standup-desk-build/</guid>
      <description>After commuting close to 1000kms a week for 6 years, I have decided to the the leap and move to Toronto. After all, I was here around 4 nights a week, and having to commute back and forward between Mississauga and Toronto had become a hassle. This would also increase my work drive (from 85kms each way to 115kms), but luckily my client agreed for me to work remote 4 days of the week, with made my move even more possible.</description>
    </item>
    
    <item>
      <title>How to Create a Quick Web Server</title>
      <link>https://blog.victormendonca.com/2017/10/11/how-to-create-a-quick-web-server/</link>
      <pubDate>Wed, 11 Oct 2017 17:58:37 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/10/11/how-to-create-a-quick-web-server/</guid>
      <description>Have you ever had the need to create a web server to perform a test? Well, here are a few quick options on how to do this.
Got Netcat? If you have Netcat on the server (which is pretty easy to get), then you can do this.
Example 1: Display the date and the text &amp;laquo;It works&amp;raquo;
nc -kl 10001 -c &#39;echo -e &amp;quot;HTTPS/1.1 200 OK\r\n\r\n$(date)\r\n\r\nIt works&amp;quot;&#39;  Example 2: Display an index.</description>
    </item>
    
    <item>
      <title>How to Load Gitlab Inside an Iframe</title>
      <link>https://blog.victormendonca.com/2017/10/11/how-to-load-gitlab-inside-an-iframe/</link>
      <pubDate>Wed, 11 Oct 2017 17:08:34 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/10/11/how-to-load-gitlab-inside-an-iframe/</guid>
      <description>So you are trying to load GitLab inside another page via iframe, and you are not able to. Due to security reasons, this is default behavior for GitLab, and as per the project (see issue 2347, this will not change, and I agree).
However for some internal users this might not be the best approach, so here&amp;rsquo;s how to enable it.
Browse to your install directory and go to your ‘nginx’ folder.</description>
    </item>
    
    <item>
      <title>How to View DNS Calls Made by Processes</title>
      <link>https://blog.victormendonca.com/2017/10/06/how-to-view-dns-calls-made-by-processes/</link>
      <pubDate>Fri, 06 Oct 2017 18:46:20 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/10/06/how-to-view-dns-calls-made-by-processes/</guid>
      <description>We had the need at work to monitor DNS calls made by an application in a RHEL system in order to stabilish if a connection pool config change had taken full effect, or if we had missed any configuration file. And the solution was to use SystemTap for this task.
SystemTap (stap) is a scripting language and tool that simplifies the gathering of information about the running Linux system. It allows you to monitor and trace the operation of a Linux kernel.</description>
    </item>
    
    <item>
      <title>Bash Special Parameters</title>
      <link>https://blog.victormendonca.com/2017/09/26/bash-special-parameters/</link>
      <pubDate>Tue, 26 Sep 2017 22:46:27 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/26/bash-special-parameters/</guid>
      <description>Special parameters are set by the shell to store information about aspects of its current state, such as the number of arguments and the exit code of the last command. Special parameters can only be referenced and cannot have it&amp;rsquo;s value assigned.
Special parameters are: $*, $@, $#, $$, $!, $?, $0, $-, $_
   Parameter Definition     $* List of arguments (as a string)   $@ List of arguments (as an array)   $# Number of positional parameters   $$ PID of the current shell   $!</description>
    </item>
    
    <item>
      <title>Atom as Markdown Editor</title>
      <link>https://blog.victormendonca.com/2017/09/24/atom-as-markdown-editor/</link>
      <pubDate>Sun, 24 Sep 2017 22:46:02 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/24/atom-as-markdown-editor/</guid>
      <description>I have been looking for a good Markdown editor for quite a while, and after a lot of research, I finally I found one.
Some of the key features that were very important to me on a Markdown editor were:
 Live preview File browser (sidebar) GitHub flavored Fast and non laggy preview  And not surprisingly, Atom from GitHub was my solution.
You might also want to:
 Change the preferences of the already installed package markdown-preview to GitHub flavored   And install markdown-preview-auto-open  apm install markdown-preview-auto-open  </description>
    </item>
    
    <item>
      <title>Gnome Touchpad Settings Missing in Arch Xps 13</title>
      <link>https://blog.victormendonca.com/2017/09/23/gnome-touchpad-settings-missing-in-arch-xps-13/</link>
      <pubDate>Sat, 23 Sep 2017 22:47:40 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/23/gnome-touchpad-settings-missing-in-arch-xps-13/</guid>
      <description>I had an issue where the Gnome extension &amp;lsquo;Touchpad Indicator&amp;rsquo; stopped working on my xps 13 (Arch). After looking a bit further, it seems that the Gnome Touchpad settings had also stopped working. All I could see was the mouse settings, and the touchpad section was completelly gone.
Solution:
With Gnome 3.20, xf86-input-synaptics is not longer supported, and you should use xf86-input-libinput instead.
You can check what is installed on your Arch system with pacman -Q | grep input.</description>
    </item>
    
    <item>
      <title>Additional Status for Vim With Powerline</title>
      <link>https://blog.victormendonca.com/2017/09/20/additional-status-for-vim-with-powerline/</link>
      <pubDate>Wed, 20 Sep 2017 13:26:46 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/20/additional-status-for-vim-with-powerline/</guid>
      <description>Would you like to have more information displayed while reading files in VIM? Powerline is a great utility for that.
In it&amp;rsquo;s default config, it displays:
 Current mode (normal, insert, visual) Git branch File name File encoding Script type File view percentage Line number  To install it Arch: sudo pacman -Ss python-powerline powerline  Add the line below to your ~/.vimrc
set laststatus=2  Note: If you get the error below</description>
    </item>
    
    <item>
      <title>Bash: Parameter Expansion (Substitution)</title>
      <link>https://blog.victormendonca.com/2017/09/19/bash-parameter-expansion/</link>
      <pubDate>Tue, 19 Sep 2017 01:31:32 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/09/19/bash-parameter-expansion/</guid>
      <description>Default Usage ${PARAMETER}
Expand parameter value. It can be used for:
 Separating characters from variable names  cd /home/${user}  Positional parameter higher than 9  echo &amp;quot;Argument 10 is: ${10}&amp;quot;   Indirection ${!PARAMETER}
Expands to the value of the variable named by the value of parameter.
var=var1 var1=temp $ echo ${!var} temp  Case Modification ${PARAMETER^}, ${PARAMETER^^} ${PARAMETER,}, ${PARAMETER,,} ${PARAMETER~}, ${PARAMETER~~}
|Operator|Action| |&amp;ndash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;| |^|Changes first character to upper case| |^^|Changes all characters to upper case| |,|Changes first character to lower case| |,,|Changes all characters to lower case| |~|Inverts case of first character| |~~|Inverts case of all characters|</description>
    </item>
    
    <item>
      <title>Alternatives to Top</title>
      <link>https://blog.victormendonca.com/2017/08/30/alternatives-to-top/</link>
      <pubDate>Wed, 30 Aug 2017 01:34:30 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/08/30/alternatives-to-top/</guid>
      <description>Looking for alternatives to your usual top command? Here are some options.
htop htop is based on ncurses and is compatible with most Linux (and Unix) systems. It&amp;rsquo;s also in most the official repos for most distros.
Features: - Mouse clicks (due to ncurses) - Defaults to multi-CPU view - Memory shown in GB
Website: http://hisham.hm/htop/
vtop vtop takes more of a graphical approach to top, while concentrating more on simplicity.</description>
    </item>
    
    <item>
      <title>Bash - Command Substitution, Subshell and Codeblock</title>
      <link>https://blog.victormendonca.com/2017/01/11/bash-command-substitution-subshell-and-codeblock/</link>
      <pubDate>Wed, 11 Jan 2017 01:38:41 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2017/01/11/bash-command-substitution-subshell-and-codeblock/</guid>
      <description>Bash - Command Substitution, Subshell and Codeblock
Quick and simple differences between using $(..), (..) and {..;}.
 $(command) or `command` - Command substitution (the output of a command replaces the command name) and is executed in a subshell. Please give preference to $(..) for better readability ( command ) - Command list is executed in a subshell { command ;} - Command list is executed in the current shell  Executing code</description>
    </item>
    
    <item>
      <title>Redirecting Bash Xtrace to a Separate Log</title>
      <link>https://blog.victormendonca.com/2016/12/23/redirecting-bash-xtrace-to-a-separate-log/</link>
      <pubDate>Fri, 23 Dec 2016 14:58:09 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2016/12/23/redirecting-bash-xtrace-to-a-separate-log/</guid>
      <description>So you have a Bash script that you want to troubleshoot, but you want to send stdout to a file, and stderr to another. Here&amp;rsquo;s a solution.
For example, I like to use Bash&amp;rsquo;s color to display failure or success on checks, and echo&amp;rsquo;s removal of new lines (echo -e &amp;quot;Wait for it...\c &amp;quot;) to wait for checks. For example, the screenshot below shows a script that check each step and report back.</description>
    </item>
    
    <item>
      <title>How to Record and Share a Terminal Session</title>
      <link>https://blog.victormendonca.com/2016/11/02/how-to-record-and-share-a-terminal-session/</link>
      <pubDate>Wed, 02 Nov 2016 17:52:10 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2016/11/02/how-to-record-and-share-a-terminal-session/</guid>
      <description>A while ago I had shared instructions on &amp;laquo;How to Share a Terminal Window Online&amp;raquo;. This is great for live support.
Today I&amp;rsquo;m sharing instructions on how to record your teminal session, and not only share it, but also allow users to copy and paste text from the playback video.
The installation could not be easier. And to show how great this utility is, I&amp;rsquo;m showing the instructions using a &amp;laquo;video&amp;raquo; recorderd with &amp;laquo;showterm&amp;raquo;.</description>
    </item>
    
    <item>
      <title>How to Create a Prompt With Timeout in Bash</title>
      <link>https://blog.victormendonca.com/2016/10/19/how-to-create-a-prompt-with-timeout-in-bash/</link>
      <pubDate>Wed, 19 Oct 2016 17:56:37 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2016/10/19/how-to-create-a-prompt-with-timeout-in-bash/</guid>
      <description>Here&amp;rsquo;s a quick function that will display a prompt with timeout in a bash script:
_myCountdownFunction () { echo -e &amp;quot;Hit \&amp;quot;Ctrl+c\&amp;quot; to quit or \&amp;quot;Enter\&amp;quot; to continue... \c&amp;quot; cnt=5 while (( cnt &amp;gt;= 0 )) ; do if (( cnt &amp;lt; 9 )) ; then echo -e &amp;quot;\b\b${cnt}s\c&amp;quot; elif (( cnt == 9 )) ; then echo -e &amp;quot;\b\b\b ${cnt}s\c&amp;quot; elif (( cnt &amp;lt;= 99 )) ; then echo -e &amp;quot;\b\b\b\b ${cnt}s\c&amp;quot; elif (( cnt &amp;lt; 999 )) ; then echo -e &amp;quot;\b\b\b\b${cnt}s\c&amp;quot; fi read -t 1 my_reply (( $?</description>
    </item>
    
    <item>
      <title>Bash Scripting - Best Practices</title>
      <link>https://blog.victormendonca.com/2015/12/18/bash-scripting---best-practices/</link>
      <pubDate>Fri, 18 Dec 2015 18:10:57 -0400</pubDate>
      
      <guid>https://blog.victormendonca.com/2015/12/18/bash-scripting---best-practices/</guid>
      <description>Bash Scripting - Best Practices 1 - Readability 1.1 - Indentation There are 3 commonly used indentation practices for Bash (I prefer the first method, however all 3 are &amp;laquo;accepted&amp;raquo;):
 2 spaces 4 spaces tabs (usually 8 spaces)
  All examples will be shown using the first indentation method, however for reference here&amp;rsquo;s a comparison between all 3.
Example:
## 2 spaces if ... command else ... command fi ## 4 spaces if .</description>
    </item>
    
  </channel>
</rss>